Revision: 0fd9182e4c1a11d8d02637826b8df9d1e333d9d5
Patch-set: 8
File: /COMMIT_MSG

16:0-17:9
Tue Sep 20 09:20:35 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_8afd4b01
Bytes: 105
Not sure what this means? charAt is implemented by transforming it to an ArrayGet. Where is that diabled?

File: compiler/optimizing/code_generator_arm.cc

4861:2-4861:54
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508b33e0_83f44083
Bytes: 42
This must be right after LoadFromOffset().

File: compiler/optimizing/code_generator_arm64.cc

2136:2-2136:54
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0462f6a_a3003a0f
Bytes: 35
This must be right after the Ldr().

File: compiler/optimizing/intrinsics_arm.cc

1192:2-1192:57
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9085abca_85c1a4f9
Bytes: 114
This should be merged with the other compression mismatch loop, with different pre-processing and post-processing.

1204:2-1204:27
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508b33e0_e3e2ecc4
Bytes: 136
Compressed comparison can be done by the same loop as uncompressed comparison with slightly modified pre-processing and post-processing.

1293:0-1296:24
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30907f09_1f288344
Bytes: 259
There are still 2 instructions that do what you need, BIC and UBFX. And it would be still better to move the compression tag to the bottom of the "count" field, so that a single LSRS will extract the length while putting the compression tag to the carry flag.

1293:0-1296:24
Mon Sep 19 18:01:32 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30907f09_1f288344
UUID: cb1db24e_ac346e94
Bytes: 304
I actually like Vladimir's suggestion. Of course this would mean you also have to go back to libcore and interpreter to make the representation change, but if you have the time, it would be very interesting to compare how much the "micro optimizations" that become possible for arm/x86 help in code size.

1316:0-1317:29
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0462f6a_03138e65
Bytes: 98
For the length=INT_MAX (theoretically valid), you'd get a negative result. Lsr() would be correct.

2439:0-2449:18
Mon Sep 19 17:39:33 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d049e37c_472f50b0
Bytes: 220
Reorder the code, please, putting these compression-independent parts first. You can then avoid the string_is_compressed and continue_process branches above, putting the srcBegin addition to each branch of the CMP below.

