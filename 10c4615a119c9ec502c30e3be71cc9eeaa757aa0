Revision: 10c4615a119c9ec502c30e3be71cc9eeaa757aa0
Patch-set: 2
File: /COMMIT_MSG

10:32-11:41
Fri Jul 15 16:12:04 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ad1308d_1d495f1f
Bytes: 117
It's reserving a large set of bits for a very small number of "users." And it's not extensibly, there's a hard limit.

10:32-11:41
Fri Jul 15 16:18:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ad1308d_1d495f1f
UUID: 6a12f748_5ae395a1
Bytes: 398
You mean the compiler for "users"? Yeah, though you could argue some other bits are also for a very small number of users.

Still we're talking about known methods, and most modifiers are not relevant for them.

What is the problem of using those bits, you think?

Hard limit is currently 255. We could work around using 65535 if you want to, but I doubt the intrinsic maintainer will survive that.

10:32-11:41
Fri Jul 15 16:23:37 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a12f748_5ae395a1
UUID: 3ad1308d_fd2c4b3f
Bytes: 56
No, I meant the number of methods being tagged that way.

14:16-16:18
Fri Jul 15 16:12:04 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ad1308d_7d569bbe
Bytes: 74
That's a bug that should be assigned to our class-unloading implementer...

14:16-16:18
Fri Jul 15 16:18:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ad1308d_7d569bbe
UUID: 0af41b40_df1f9b5f
Bytes: 156
Or a bug in the compiler. Regardless, we need to fix it, and I'm in the opinion avoiding a map completely is a nice cleanup.

Do you have other suggestions?

14:16-16:18
Fri Jul 15 16:21:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0af41b40_df1f9b5f
UUID: 6a12f748_3ad8e1e9
Bytes: 194
For cleanups that is. We can surely put some hooks between class linker and dex method inliner / compiler driver, but I feel it's much nicer to avoid the map altogeter and not require any hooks.

14:16-16:18
Fri Jul 15 16:23:37 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0af41b40_df1f9b5f
UUID: 3ad1308d_5d1e3704
Bytes: 266
Using a map nicely decouples runtime internals (who don't care that the method can be intrinsified) from the compiler, though. And means that my favorite modes, interpreter and AoT, don't have any "overhead." Maybe an implementation of a sparse map would save space?

File: runtime/art_method.h

297:57-297:70
Fri Jul 15 16:23:37 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ad1308d_bdc49375
Bytes: 22
Why waste another bit?

