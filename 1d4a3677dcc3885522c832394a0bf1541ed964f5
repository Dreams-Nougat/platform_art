Revision: 1d4a3677dcc3885522c832394a0bf1541ed964f5
Patch-set: 1
File: runtime/gc/space/image_space.cc

1688:31-1688:36
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_d5c34e4a
Bytes: 82
nit: gets confusing later on in the code, why not just [boot_]class_path_element ?

1688:31-1688:36
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_d5c34e4a
UUID: ad833f54_46e81233
Bytes: 4
Done

1692:38-1692:49
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_95d8663f
Bytes: 113
nit: why is it called "from" ? Is there a tospace? I think just calling it image_locations would've been simpler.

1692:38-1692:49
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_95d8663f
UUID: ad833f54_e6190695
Bytes: 4
Done

1693:11-1693:15
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_d50b4e09
Bytes: 16
nit: ImageSpace*

1693:11-1693:15
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_d50b4e09
UUID: ad833f54_061f6a78
Bytes: 4
Done

1705
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_d5f4aeda
Bytes: 69
nit: a comment that it's an iterator to a string would be appreciated

1705
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_d5f4aeda
UUID: ad833f54_86827a51
Bytes: 4
Done

1708
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_75e6222c
Bytes: 77
nit: a comment that it's an iterator to a string pointer would be appreciated

1708
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_75e6222c
UUID: ad833f54_267f0e80
Bytes: 4
Done

1716
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_d5482e30
Bytes: 41
nit: ++it is usually faster for iterators

1716
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_d5482e30
UUID: ad833f54_467c9288
Bytes: 4
Done

1728
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_35341a99
Bytes: 82
This doesn't reset spaces_it to the beginning, can you comment the rationale here?

1728
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_35341a99
UUID: ad833f54_06c3ea9b
Bytes: 4
Done

1738
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_35bf3aaf
Bytes: 185
Should this have extra logic?

    error = error || ....

Otherwise it looks like the early error on 1721 might not proc because 1722/1723 makes this statement evaluate to always false?

1738
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_35bf3aaf
UUID: ad833f54_e6bd860c
Bytes: 4
Done

1747
Tue Dec 06 18:19:55 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad833f54_b8780132
Bytes: 112
Not really sure what the error conditions are, I think it has to have same # of components and same order right?

1747
Tue Dec 06 20:27:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad833f54_b8780132
UUID: ad833f54_c6cc02c9
Bytes: 4
Yes.

