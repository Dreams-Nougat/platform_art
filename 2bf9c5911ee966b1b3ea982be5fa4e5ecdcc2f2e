Revision: 2bf9c5911ee966b1b3ea982be5fa4e5ecdcc2f2e
Patch-set: 1
File: compiler/optimizing/code_generator_arm_vixl.cc

26:0-27:27
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6741f0d_c5503a29
Bytes: 77
Does the new code generator already support (existing) intrinsics generation?

40:0-40:52
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 567a4bf7_a83f9bc2
Bytes: 84
Is this really needed, given that `vixl32` is alreay a shortcut for `vixl::aarch32`?

57:50-57:51
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_18b069e1
Bytes: 7
Nit: 4u

397:2-397:47
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6a97fa7_bd769f99
Bytes: 157
This change is recent, but can this be turned into:

  if (EntrypointRequiresStackMap(entrypoint)) {
    RecordPcInfo(instruction, dex_pc, slow_path);
  }

?

625:6-625:31
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb63f225_d4929ca2
Bytes: 79
Nit: Add parentheses.  Also, the whole instruction should fit on a single line.

627:6-627:32
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb63f225_34f31004
Bytes: 6
Ditto.

647:6-647:61
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ebefd6c0_ed370537
Bytes: 165
This conditions differs from the one in compiler/optimizing/code_generator_arm.cc; is this on purpose?  (Maybe VIXL does not provide a `IsLinked` method for labels?)

686:0-687:34
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_d5d31c53
Bytes: 123
Move this into a

  if (kIsDebugBuild) { /* ... */ }

block?  Or maybe the definition of `cond_val` at its unique use site?

806:61-806:62
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_f89acd5f
Bytes: 7
Nit: 3u

1195:0-1198:21
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_38ad258c
Bytes: 26
Nit: Put on a single line.

1259:10-1259:67
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b5c6205_58965d99
Bytes: 186
Shouldn't this be 

  __ Vcvt(I32, F32, â€¦);

i.e., destination data type then source data type (and likewise in other uses below)?  (The VIXL documentation is a bit scarce about this.)

1268:0-1271:77
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_78a79da9
Bytes: 26
Nit: Put on a single line.

1322:0-1325:22
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_98c6393f
Bytes: 6
Ditto.

2021:0-2022:52
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_78c23d27
Bytes: 26
Nit: Put on a single line.

2029:0-2029:26
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_d8e7d1d4
Bytes: 24
Nit: Indentation is off.

2053:0-2053:23
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_f8ec8dbb
Bytes: 6
Ditto.

2135:47-2135:63
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_38dfe5f7
Bytes: 26
Nit: Move after `int reg`.

2139:49-2139:65
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb76f682_58dca100
Bytes: 6
Ditto.

File: compiler/optimizing/code_generator_arm_vixl.h

50:8-50:19
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 367f97e8_c732feaa
Bytes: 121
This macro seems to be only used in ` compiler/optimizing/code_generator_arm_vixl.cc`, so I'd move this definition there.

52:8-52:40
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56a16ba9_3016a861
Bytes: 44
I would #undef this at the end of this file.

81:8-81:42
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56a16ba9_500b2c34
Bytes: 6
Ditto.

182:8-182:46
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 76890f3e_898ad94c
Bytes: 56
Factor this macro definition with the one from line 214?

189:8-189:48
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 76890f3e_e9819530
Bytes: 60
Likewise, factor this definition with the one from line 221?

267:2-267:10
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96992396_025aca54
Bytes: 5
Drop.

File: compiler/optimizing/common_arm.h

57:9-57:15
Thu Sep 15 10:22:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 367f97e8_a7350a96
Bytes: 106
`vixl32` is an alias of `vixl::aarch32`; I think we should consistently use one or the other in this file.

