Revision: 2e75cd86957e18b6562a646b15092caa5be049f1
Patch-set: 4
File: runtime/thread.cc

1008:62-1008:75
Tue Oct 04 19:50:26 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2204b597_c6f2a2cc
Bytes: 74
Should the flip_function be GUARDED_BY(Locks::thread_suspend_count_lock_)?

1008:62-1008:75
Tue Oct 04 20:28:03 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2204b597_c6f2a2cc
UUID: 02a09108_0d27711f
Bytes: 295
I'd like to avoid it as that would mean mutators would have to contend on the lock when getting the flip function in Thread::TransitionFromRunnableToSuspended(). I think it's safe to get the flip function without acquiring the lock there because flip function is set while threads are suspended.

1008:62-1008:75
Wed Oct 05 14:03:11 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 02a09108_0d27711f
UUID: c21af956_4355a619
Bytes: 97
But you are relying on the Locks::thread_suspend_count_lock_ for the visibility here, aren't you?

1008:62-1008:75
Wed Oct 05 17:46:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c21af956_4355a619
UUID: 02a09108_acbe167d
Bytes: 310
I think I am (unless waking up from a futex wait is enough.) It's GUARDED_BY(Locks::thread_suspend_count_lock_) in that sense. But I'd like to not put GUARDED_BY there to avoid needing to acquire the lock in TransitionFromSuspendedToRunnable to satisfy the annotation constraint where I think it's safe not to.

1008:62-1008:75
Wed Oct 05 21:39:20 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 02a09108_acbe167d
UUID: 9f85bcca_a27dbe3e
Bytes: 323
If this can never actually be read concurrently with an update, it should be fine to read it without a lock. Whatever communication is used to wake up a thread after suspension (futex wake presumably), or to let the suspending thread know we are suspended, should provide the required synchronization/visibility guarantees.

File: runtime/thread.h

234:6-234:50
Wed Oct 05 21:39:20 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f85bcca_22220eab
Bytes: 171
I think we should always document cases in which this lock is temporarily released by the function, since that may break atomicity in the caller. Hopefully that's OK here?

234:6-234:50
Thu Oct 06 01:03:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f85bcca_22220eab
UUID: df7734bf_17863673
Bytes: 55
Added a comment. The existing call sites look OK to me.

