Revision: 2fd34e8333c84c05d0d0768c58933099fac3e799
Patch-set: 3
File: compiler/optimizing/cha_guard_optimization.cc

21:0-24:27
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_99a31f84
Bytes: 188
Add that, as a consequence, we decided not to rely on other passes to remove them (such as GVN or instruction simplifier).

Also say which of the three optimization puts you in that state.

21:0-24:27
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_99a31f84
UUID: da6aeb2c_22c73b5a
Bytes: 4
Done

57:2-57:46
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_d9cf5742
Bytes: 14
Add a comment.

57:2-57:46
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_d9cf5742
UUID: da6aeb2c_456e0172
Bytes: 4
Done

99:2-99:37
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_d99d9742
Bytes: 66
How can we generalize this (eg a phi taking only HParameterValues)

99:2-99:37
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_d99d9742
UUID: da6aeb2c_e5860dfe
Bytes: 55
Good idea. I put it as a TODO and can enhance it later.

114:0-121:3
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_19e2afbc
Bytes: 60
Please add a comment on the compile-time cost of doing this.

114:0-121:3
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_19e2afbc
UUID: da6aeb2c_1b31c646
Bytes: 183
// We potentially need to traverse the full dominator chain to
  // receiver_def_block, plus a linear search within one block for
  // each guard removal.

Does that look good enough?

114:0-121:3
Thu Dec 15 17:43:35 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da6aeb2c_1b31c646
UUID: 9ab4f348_91637c57
Bytes: 56
I would also add a rationale about why we think it's ok.

114:0-121:3
Mon Dec 19 07:15:10 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ab4f348_91637c57
UUID: 7a51fff3_25d6da10
Bytes: 63
Added a little more comments for the worst case for each guard.

122
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_19bb8fa8
Bytes: 79
Add a comment "At this point dominator is the block where receiver is defined."

122
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_19bb8fa8
UUID: da6aeb2c_85cab93c
Bytes: 4
Done

123:34-123:43
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_39c04b1e
Bytes: 12
`dominator`.

123:34-123:43
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_39c04b1e
UUID: da6aeb2c_bbd512d4
Bytes: 4
Done

127:7-127:47
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_59c5072d
Bytes: 18
flag is defined ..

127:7-127:47
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_59c5072d
UUID: da6aeb2c_052889f4
Bytes: 63
Changed it to:
Flag and receiver are defined in the same block.

131:7-131:42
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_79cac33f
Bytes: 7
Remove.

131:7-131:42
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_79cac33f
UUID: da6aeb2c_25f4a565
Bytes: 4
Done

152
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_99aebf64
Bytes: 38
Add comments (like the other methods).

152
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_99aebf64
UUID: da6aeb2c_65ee9d99
Bytes: 4
Done

156:4-156:56
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_d9b837a7
Bytes: 19
Move this line 166?

156:4-156:56
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_d9b837a7
UUID: da6aeb2c_a50a5543
Bytes: 4
Done

155:0-157:53
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_f9b5f3ab
Bytes: 66
Simplify with if (loop_info != nullptr && loop_info->IsDefined...)

155:0-157:53
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_f9b5f3ab
UUID: da6aeb2c_65f85d09
Bytes: 50
Done. Also added !loop_info->IsIrreducible() test.

158:20-158:32
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_b9ab7b53
Bytes: 7
compare

158:20-158:32
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_b9ab7b53
UUID: da6aeb2c_451e017c
Bytes: 4
Done

163:6-163:69
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_59dc2701
Bytes: 47
Add a comment where you advance it (and why 2).

163:6-163:69
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_59dc2701
UUID: da6aeb2c_45452166
Bytes: 4
Done

172:6-173:84
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_79e1e3b3
Bytes: 65
Add a comment why you can't reuse the existing deopt instruction.

173:0-173:8
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_39e76bcd
Bytes: 13
2 more spaces

173:0-173:8
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_39e76bcd
UUID: da6aeb2c_8591d9a0
Bytes: 4
Done

172:6-173:84
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_79e1e3b3
UUID: da6aeb2c_658cdd8b
Bytes: 4
Done

175:6-175:38
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_99d5dfd4
Bytes: 23
Isn't that always true?

175:6-175:38
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_99d5dfd4
UUID: da6aeb2c_057de983
Bytes: 19
I removed the test.

190:2-194:3
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_b9d29be7
Bytes: 128
This is going to create an artificial range for the null value. I think you should make HShouldDeoptimizeFlag take 1 or 0 input.

190:2-194:3
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_b9d29be7
UUID: da6aeb2c_e0b7dbd3
Bytes: 38
How? Like HPhi instead of HExpression?

190:2-194:3
Thu Dec 15 17:43:35 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da6aeb2c_e0b7dbd3
UUID: 9ab4f348_f1680835
Bytes: 29
Yeah, extending HInstruction.

190:2-194:3
Mon Dec 19 07:15:10 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ab4f348_f1680835
UUID: 7a51fff3_05e1d6e6
Bytes: 4
Done

File: compiler/optimizing/nodes.h

2909:0-2909:62
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_f9cc1350
Bytes: 48
Drop, and add a comment why SideEffects is None?

2909:0-2909:62
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_f9cc1350
UUID: da6aeb2c_dbabae52
Bytes: 4
Done

2917:40-2917:41
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_39120bce
Bytes: 103
Add: "Therefore, we pretend this guard cannot be moved to avoid other optimizations trying to move it".

2917:40-2917:41
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_39120bce
UUID: da6aeb2c_7b8aba00
Bytes: 4
Done

File: compiler/optimizing/optimizing_compiler.cc

779:58-779:89
Wed Dec 14 14:16:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_364a18a1
Bytes: 7
Remove.

779:58-779:89
Wed Dec 14 20:35:59 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_364a18a1
UUID: da6aeb2c_a2e96bfe
Bytes: 4
Done

