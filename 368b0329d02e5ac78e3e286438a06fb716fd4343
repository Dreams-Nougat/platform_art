Revision: 368b0329d02e5ac78e3e286438a06fb716fd4343
Patch-set: 1
File: compiler/optimizing/code_generator_arm_vixl.cc

110:0-111:43
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_4e61b306
Bytes: 145
Why not implementing and using CodeGeneratorARMVIXL::SaveFloatingPointRegister here?  Or maybe this is included in the TODO from lines 100â€“101?

114:0-115:37
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_2e666720
Bytes: 6
Ditto.

144:0-145:37
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c6576f4_89bc39b0
Bytes: 6
Ditto.

159:0-160:43
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_ce6c83fd
Bytes: 75
Same question regarding CodeGeneratorARMVIXL::RestoreFloatingPointRegister.

163:0-164:37
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc3022eb_8c2e87f8
Bytes: 6
Ditto.

193:0-194:37
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3c421e4d_6feb51a1
Bytes: 39
Isn't this already covered by line 192?

200:0-201:73
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_0e3debde
Bytes: 27
Nit: Fits on a single line.

250:11-250:58
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_ce1ec37d
Bytes: 139
Out of curiosity, how do you plan to do this?  Are you thinking about exercising this in a test, or maybe instrumenting the generated code?

351:0-354:42
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_8e28bb9d
Bytes: 27
Nit: Fits on a single line.

684:0-686:66
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_ee13bf65
Bytes: 27
Nit: Fits on a single line.

752:79-752:83
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_ce42433c
Bytes: 70
Nit:

  /* do_clinit */ true

Also, put this argument on its own line.

788:58-788:65
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_8e4c3b6e
Bytes: 28
Was this left intentionally?

806:2-806:8
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc3022eb_6c00fb10
Bytes: 19
Nit: Use DCHECK_EQ.

824:49-824:70
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_6e7b4f7f
Bytes: 35
Doesn't this need ATTRIBUTE_UNUSED?

825:29-825:35
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_0e7a8b77
Bytes: 6
Ditto?

830:4-830:5
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_4e809367
Bytes: 7
Nit: 0u

831:4-831:5
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_2e754789
Bytes: 6
Ditto.

914:9-914:13
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c56f215_e8429394
Bytes: 101
So, I assume VIXL now deduces the width of the operation (F32 or F64) from the inputs and/or outputs?

2614:32-2614:45
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_40b36e9f
Bytes: 27
Nit: One argument per line.

2640:32-2640:45
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_20b8ea77
Bytes: 6
Ditto.

2814:19-2814:70
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_8066161e
Bytes: 157
The implicit null checks above are only done for the reference (line 2763) and double (line 2795) cases; the null check from line 2815 addresses other cases.

3123:51-3123:55
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_402eceb1
Bytes: 42
Should this be temporarily set to `false`?

3145:0-3147:45
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7cc1f61c_e93f150c
Bytes: 27
Nit: Fits on a single line.

3175:0-3178:60
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_c0213ebe
Bytes: 11
Nit: Ditto.

3285
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c37d20c_002cc6b0
Bytes: 205
Maybe add:

  // TODO(VIXL): Support `CodePtrLocation` values other than `kCallArtMethod`.
  DCHECK_EQ(invoke->GetCodePtrLocation()),
            HInvokeStaticOrDirect::CodePtrLocation::kCallArtMethod);

?

3288:6-3288:49
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bca28e7a_a39dba08
Bytes: 27
Nit: One argument per line.

3318
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3cb77eb7_e71e627d
Bytes: 30
Nit: Remove blank line (3318).

File: compiler/optimizing/code_generator_arm_vixl.h

67:0-67:51
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_6e4fcfc1
Bytes: 103
This does not seem to be used outside of compiler/optimizing/code_generator_arm_vixl.cc; move it there?

73:88-73:94
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_0e4e0bc2
Bytes: 40
I think the original version was better.

329:37-329:58
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_8e39db28
Bytes: 29
Nit: `requires_read_barrier`.

419:29-419:35
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_4e8f73e0
Bytes: 11
Nit: 32-bit

File: compiler/optimizing/common_arm.h

78:28-78:29
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_2ee547cb
Bytes: 12
<< reg_code;

171:16-171:32
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_8ed55bda
Bytes: 57
What about `LocationFromPair`?  Or simply `LocationFrom`?

File: compiler/utils/arm/assembler_arm_vixl.cc

349:21-349:38
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_4e19b3e7
Bytes: 30
Please document this constant.

358:8-358:12
Wed Oct 12 13:42:21 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c2b9a7f_6e66af53
Bytes: 51
Maybe DCHECK that `base` is not a member of `regs`?

