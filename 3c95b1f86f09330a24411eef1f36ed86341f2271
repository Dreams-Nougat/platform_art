Revision: 3c95b1f86f09330a24411eef1f36ed86341f2271
Patch-set: 3
File: compiler/driver/compiler_driver.cc

2054:10-2054:48
Mon Nov 21 12:00:51 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10d8e46b_90905a2e
Bytes: 449
Why don't we simply pass the VerifierDeps as an extra parameter to VerifyClass()? That way we can avoid the extra member in Thread and a lot of indirections in the VerifierDeps. Repeatedly retrieving the VerifierDeps singleton just to compare it with null for the non-AOT case isn't exactly free.

We would need to rewrite the ParallelCompilationManager a bit to provide a worker id to Visit(), so that we can pass the right per-thread VerifierDeps.

2054:10-2054:48
Mon Nov 21 12:52:51 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10d8e46b_90905a2e
UUID: f0e0b014_cf940195
Bytes: 555
We talked about it with dbrazdil@, who started out passing it to VerifyClass. The problem is more about ClassLinker::VerifyClass, which would need to be aware of VerifierDeps, and IIRC, the VerifierDeps had to be passed to a couple of methods before hitting the verifier (not that I think it matters much here, but passing parameters is in the same performance scale as checking null for a thread entry).

So we went to the way we traditionally did things: put compiler-related stuff to the callbacks. We can revisit that later if you think it's worth it.

2054:10-2054:48
Mon Nov 21 14:42:34 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e0b014_cf940195
UUID: f0e0b014_cf4c0144
Bytes: 187
I like the idea of passing it to VerifyClass. It sounds better from a design point of view, rather then using the tls. You could file a bug for it so we don't forget to revisit if needed.

2054:10-2054:48
Mon Nov 21 14:59:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e0b014_cf4c0144
UUID: 50f25ce7_3232ce4f
Bytes: 99
Until it gets removed by bug bankruptcy :) As a whole, we should reconsider the compiler_callbacks.

2054:10-2054:48
Mon Nov 21 16:03:17 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50f25ce7_3232ce4f
UUID: f0f990d6_8e2f1c9f
Bytes: 335
Is that really true anymore? Why would the classlinker be involved? I'd assume you'd always pass null or a dummy from the classlinker? (I thought I had cleaned up results passing enough that the CompilerCallbacks are not necessary anymore)

(Maybe I have forgotten the design, but I thought we'd only create the deps on a dex2oat run?)

2054:10-2054:48
Mon Nov 21 16:13:25 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f990d6_8e2f1c9f
UUID: f0e0b014_52079481
Bytes: 173
My original point against not putting VerifierDeps in the class linker is that I did not want the class linker to care about it.

And yes, the deps are only created for AOT.

File: runtime/verifier/verifier_deps.cc

36:0-41:1
Mon Nov 21 14:42:34 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e0b014_cf252172
Bytes: 31
you could move this to utils...

36:0-41:1
Mon Nov 21 14:59:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e0b014_cf252172
UUID: d0c80c9b_36dd1673
Bytes: 4
Done

49:54-49:58
Mon Nov 21 14:42:34 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e0b014_af2ad53f
Bytes: 202
That's a bit out of context. What's the *main* one? There's no reference in this function. There's also a reference to the main one somewhere else in this file as well. That needs clarification as well.

49:54-49:58
Mon Nov 21 14:59:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e0b014_af2ad53f
UUID: 70eda006_1012240a
Bytes: 4
Done

