Revision: 3f7f03ce9a102a23961753753b5aa500226b0581
Patch-set: 4
File: runtime/class_linker.cc

2381:0-2381:31
Tue Sep 27 14:16:24 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 051b3b2a_157ad4c0
Bytes: 24
Please comment why here.

2381:0-2381:31
Tue Sep 27 16:53:04 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 051b3b2a_157ad4c0
UUID: 05d89b6b_47691288
Bytes: 4
Done

2381:0-2381:31
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 05d89b6b_47691288
UUID: 05d89b6b_02a418b4
Bytes: 184
Is there a way to cover all suspend points by instrumenting in a few well-defined points like, for example, CheckSuspend(), TransitionFromRunnableToSuspended() and the allocation path?

File: runtime/mirror/obj_ptr.h

32:31-32:51
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 05d89b6b_a2fd449b
Bytes: 42
Comment on where a race condition happens?

88:47-88:48
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 05d89b6b_82348894
Bytes: 43
Maybe also print the pointer value as well?

File: runtime/thread-inl.h

62:0-62:25
Tue Sep 27 14:16:24 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c54be3fb_9b366b05
Bytes: 41
And put parts of the commit message here.

62:0-62:25
Tue Sep 27 16:53:04 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c54be3fb_9b366b05
UUID: 05d89b6b_6783ee3e
Bytes: 4
Done

62:0-62:25
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 05d89b6b_6783ee3e
UUID: 05d89b6b_62e75cfe
Bytes: 30
Move this into CheckSuspend()?

File: runtime/thread.h

474:0-480:3
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 05d89b6b_36d3d9f7
Bytes: 76
Is there a way to turn this into a no-op (no overhead) in a non-debug build?

1539:47-1539:89
Tue Sep 27 17:58:19 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 05d89b6b_c2cf307c
Bytes: 91
Why not put this in the packed struct? And how is the cross compilation no-access enforced?

