Revision: 4115b16f9df39c04f927f5cc673013f9178c4959
Patch-set: 13
File: compiler/oat_writer.cc

1597:58-1597:95
Tue Sep 20 12:53:16 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_2ad53f39
Bytes: 170
btw, this seems awkward. i initially assumed it was an out arg but it's not - shouldn't we pass it as an in-arg by const reference (and make VerifierDeps::Encode const ?)

1597:58-1597:95
Tue Sep 20 12:58:38 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 305b1f41_2ad53f39
UUID: 708af7dc_a11b7e27
Bytes: 92
It can be null (for eg the boot image, which doesn't need verifier deps), hence the pointer.

1597:58-1597:95
Tue Sep 20 13:00:38 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 708af7dc_a11b7e27
UUID: 305b1f41_cacb439a
Bytes: 214
second half of the message is still valid (can be const verifier::VerifierDeps* verifier_deps).

I don't know how much of the google3 style guide you follow, but in-args must come before out-args according to that.

1597:58-1597:95
Tue Sep 20 13:27:01 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 305b1f41_cacb439a
UUID: 305b1f41_8a666bbd
Bytes: 272
There's no out args here. I think you're being confused by the 'out' in the parameter name, but that's a file where we are going to dump stuff to (for the oat file, we actually just call it 'out').

And the style I think we've always followed is only use const references.

1597:58-1597:95
Tue Sep 20 13:43:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 305b1f41_8a666bbd
UUID: 508b33e0_6347bc06
Bytes: 54
Why not const pointers? They are perfectly reasonable.

1597:58-1597:95
Tue Sep 20 13:54:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 508b33e0_6347bc06
UUID: 708af7dc_c131e2a4
Bytes: 187
https://google.github.io/styleguide/cppguide.html#Function_Parameter_Ordering

"Usually" so not a hard rule. But I know for me a const pointers always make me wonder why it's not a const.

1597:58-1597:95
Tue Sep 20 14:05:52 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 708af7dc_c131e2a4
UUID: f050a71d_886677bd
Bytes: 167
But this is an input parameter that is a pointer, so it's already a violation of the soft rule. Making it const is, in my opinion, in line with the intent of the rule.

File: dex2oat/dex2oat.cc

1776
Tue Sep 20 13:43:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508b33e0_834c4028
Bytes: 56
You need to Flush() either here or in WriteVdexHeader().

1776
Tue Sep 20 13:54:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 508b33e0_834c4028
UUID: b0462f6a_c63b4424
Bytes: 49
Flush is happening line 1856, is that not enough?

1776
Tue Sep 20 14:05:52 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0462f6a_c63b4424
UUID: 30907f09_027fccb2
Bytes: 219
But that's not a Flush() on the buffered vdex_out and there may be an error ignored by BufferedOutputStream::~BufferedOutputStream(). We should not rely on subsequent operations on underlying File also reporting errors.

1776
Wed Sep 21 15:19:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30907f09_027fccb2
UUID: 909beb7b_d28ba4c8
Bytes: 4
Done

