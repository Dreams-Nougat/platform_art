Revision: 5790e9d349c6008f2bdff1cc64573438a48ace4a
Patch-set: 7
File: compiler/optimizing/loop_optimization.cc

27:0-27:62
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_4d5d2d48
Bytes: 39
What prevents using induction analysis?

55:20-55:52
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_2d62f90f
Bytes: 135
check if `block` is the header of an empty loop.

But actually the name of the method is good enough and doesn't require a comment IMO.

60:0-60:47
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_ed6bc1e6
Bytes: 2
:)

63:24-63:49
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_0d673520
Bytes: 34
Maybe add a block->GetSinglePhi()?

84:3-84:51
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_cd68fdec
Bytes: 24
ditto about the comment.

91:0-91:51
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_ad75c9c2
Bytes: 86
ditto

But a comment on what conditions can a pre header can be removed could be nice.

110:10-110:43
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_8d7205d7
Bytes: 128
Since you're changing the block, I'd suggest changing the method name / re-arrange the code to convey it's not just a predicate.

145:0-145:51
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_6d411160
Bytes: 62
Expand the comment on why you need the graph to be linearized?

162:0-162:59
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f09507fc_1dcbb36f
Bytes: 84
Do the LoopNode escape this pass? You might consider having your own ArenaAllocator.

209:54-209:57
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_4d464d7a
Bytes: 11
environment

220:54-220:57
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_2d3b19fa
Bytes: 11
environment

224:42-224:45
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_0d405558
Bytes: 11
environment

231:24-231:39
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_ed54e11c
Bytes: 18
RemoveIfEmptyLoop?

235:0-235:35
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508b33e0_c6d9f60f
Bytes: 81
Although I think I understand this comment :) you might want to be more explicit.

251:0-253:3
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0462f6a_a62168b0
Bytes: 130
I guess this guarding against body branching to the exit too? Please add a comment (I think single exit is not really clear here).

254:25-254:27
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f050a71d_6bf9f568
Bytes: 32
nit: replace the parens with ':'

File: compiler/optimizing/loop_optimization.h

30:35-30:36
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f09507fc_7dd67718
Bytes: 2
as

45:40-45:41
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d049e37c_4a099735
Bytes: 9
loop_info

51:21-51:22
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508b33e0_a6dcf200
Bytes: 6
const?

File: compiler/optimizing/nodes.cc

526:0-526:24
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_cd511d2b
Bytes: 169
Since liveness analysis will create a new linear order, should this method just return the linear order (without updating the field), and only liveness update the field?

File: test/618-checker-induction/src/Main.java

85:0-85:15
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30907f09_622d789f
Bytes: 61
Check that this is still here? (applies to other tests below)

153:0-153:44
Tue Sep 20 21:23:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 305b1f41_ad4ee988
Bytes: 54
CHECK the value returned? (here and other tests below)

