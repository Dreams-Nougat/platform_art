Revision: 5a11ac6037998b87d860da9d51ca4dfdbb606d45
Patch-set: 4
File: compiler/image_writer.cc

1071:0-1074:3
Thu Nov 10 19:37:55 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b5ca306_d8e0adb9
Bytes: 492
Minor point: would the following code work (without assuming kClassLoader is the last in the enum)?

  for (int32_t i = 0; i < image_roots_size; ++i) {
    // image_roots[ImageHeader::kClassLoader] will be set later for app image.
    if (i != ImageHeader::kClassLoader) {
      CHECK(image_roots->Get(i) != nullptr);
    }
  }

Or have 

  static_assert(ImageHeader::kClassLoader + 1u == ImageHeader::kImageRootsMax,
                "Class loader should be the last image root.");

here too?

1495:4-1495:40
Thu Nov 10 19:37:55 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b5ca306_38de09c2
Bytes: 69
Is it the case that we always have one class loader in the app image?

File: runtime/image.h

192:0-192:37
Thu Nov 10 21:15:00 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b5ca306_bba5b3f1
Bytes: 93
I seems like it would be easier to just always have this root even in the non app image case.

192:0-192:37
Fri Nov 11 14:06:49 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b5ca306_bba5b3f1
UUID: 4bf54bfd_7eafb1ca
Bytes: 72
Is there an easy way to get hold of the class loader for the boot image?

192:0-192:37
Fri Nov 11 18:34:36 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4bf54bfd_7eafb1ca
UUID: 8b5ca306_12d83c36
Bytes: 64
If we don;t need for the boot image we could just leave it null.

