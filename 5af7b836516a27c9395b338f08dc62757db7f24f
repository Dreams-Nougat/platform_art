Revision: 5af7b836516a27c9395b338f08dc62757db7f24f
Patch-set: 1
File: runtime/native/java_lang_VMClassLoader.cc

29:0-30:21
Wed Dec 03 03:56:58 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dfb999d9_7faf0776
Bytes: 123
shouldn't you be able to friend a function? VMClassLoader is already a Java class, its unfortunate to overload its meaning.

29:0-30:21
Wed Dec 03 04:00:17 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dfb999d9_7faf0776
UUID: 5fd68940_ada9bd73
Bytes: 71
Tried that, but you're not allowed to do it with a static function. :-(

29:0-30:21
Wed Dec 03 04:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fd68940_ada9bd73
UUID: dfb999d9_3f8e6f10
Bytes: 51
Perhaps just make the member functions public then?

29:0-30:21
Wed Dec 03 04:31:08 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dfb999d9_3f8e6f10
UUID: 3fe39520_ec610b36
Bytes: 395
That's what they were, and I disliked it. They expose the hash of the descriptor, something I hadn't checked on in my closure CL. Personally I believe that "outside" of class-linker that functionality should not be exposed.

We use it here as an optimization, and that's why I introduced this friend (even though I dislike friend classes).

If you think it's too horrible I can live with that...

29:0-30:21
Wed Dec 03 04:35:27 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3fe39520_ec610b36
UUID: 7f8d0d44_d43474ff
Bytes: 202
I'm not sure I'm following the pattern of semi-hiding the hash. Perhaps we can completely hide it and rely on the "pure" attribute to remove the ComputeModifiedUtf8Hash recomputation in findLoadedClass.

29:0-30:21
Wed Dec 03 09:21:45 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f8d0d44_d43474ff
UUID: ff82dd17_93c92666
Bytes: 251
It looks like this is just because we want to save the ComputeModifiedUtf8Hash being computed twice. I suggest either
1) Do the computation twice an don't bother.
2) Moving the logic of LookupClass; if (null) FindClassInPathClassLoader to ClassLinker.

