Revision: 5cea81a9a2f2857aa5fc603a8cdb65e7d3cd3170
Patch-set: 6
File: /COMMIT_MSG

9:0-10:26
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_42984704
Bytes: 66
Can you spell out a bit how this change avoids the deadlock issue?

File: compiler/optimizing/inliner.cc

347
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_623d8bd1
Bytes: 55
Should we return false here with a unique VLOG message?

File: runtime/jit/jit_code_cache.cc

157:43-157:51
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_6250eb4e
Bytes: 21
'condition variable'?

334
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_c239f701
Bytes: 70
Rename this to 'klass' or 'cls' or something to indicate it's a class?

343:27-343:37
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_e2dbdb7c
Bytes: 10
Similarly.

438:0-445:3
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_c20e9753
Bytes: 81
It looks like it doesn't hold the lock here. I suppose it's okay and as intended?

File: runtime/runtime.cc

1820:30-1820:52
Tue Nov 29 20:38:33 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ade97f6b_e2651bf6
Bytes: 88
How about BroadcastForInlineCacheAccess rather than checking kUseReadBarrier internally?

