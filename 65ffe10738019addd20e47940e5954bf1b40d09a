Revision: 65ffe10738019addd20e47940e5954bf1b40d09a
Patch-set: 4
File: runtime/imtable-inl.h

36:35-36:61
Wed Sep 28 09:05:34 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_1cfe354e
Bytes: 255
Do we need to use the expensive PrettyMethod()?

We could put together hashes from the name, argument types and return type without translating "Lpackage/Class;" to package.Class, "I" to "int", etc., and without doing heap allocations for the std::string.

36:35-36:61
Wed Sep 28 15:33:28 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_1cfe354e
UUID: e5c1c7c3_0bb11e4e
Bytes: 403
See comment on PS1. I'd rather keep this simple for now. I think we can get a factor of 3 or so faster (just taking Compute...(GetDeclaringClassDescriptor()) takes 10% of this), but we'll still be three orders of magnitude slower. Is a follow-up OK with you?

I want to try Hash(classname) + method_index, which would lose some stability (wrt/ methods in the interface), but should stay at the 10% mark.

36:35-36:61
Wed Sep 28 15:52:46 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e5c1c7c3_0bb11e4e
UUID: 82172137_b97bdfb1
Bytes: 181
I'd prefer a fast and stable hash straight away. Can we do a hash on C strings, ignoring the modified UTF-8 stuff?

And I think we need to bump the oat version as a part of this CL.

36:35-36:61
Wed Sep 28 15:55:52 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 82172137_b97bdfb1
UUID: e5c1c7c3_8b2eae3f
Bytes: 137
ComputeModifiedUtf8Hash already doesn't do anything for decoding...

I pretty much dislike the complexity, but I'll make the change here.

36:35-36:61
Wed Sep 28 16:21:01 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e5c1c7c3_8b2eae3f
UUID: e2029df6_fc3ee9c3
Bytes: 132
Oh, I see. Can we make ComputeModifiedUtf8Hash() inline to avoid the call overhead? (Given that we're going to make multiple calls.)

36:35-36:61
Wed Sep 28 16:29:05 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_fc3ee9c3
UUID: e5c1c7c3_eee01089
Bytes: 213
With the computational complexity (see the bug, 30ns vs at least 40k ns), I was actually considering moving this into the cc file, because I thought the call overhead is now insignificant. I'll try it out, though.

36:35-36:61
Wed Sep 28 19:36:48 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e5c1c7c3_eee01089
UUID: e5c1c7c3_7f6328d0
Bytes: 149
The non-PrettyMethod implementation lowers GetImtIndex time to 100-200 mus, so 2-3x. I'll check whether inlining the hash has any significant impact.

