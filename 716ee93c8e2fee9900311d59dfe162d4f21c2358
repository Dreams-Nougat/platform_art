Revision: 716ee93c8e2fee9900311d59dfe162d4f21c2358
Patch-set: 1
File: /COMMIT_MSG

10:30-10:40
Mon Sep 26 22:22:19 2016 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_76d5880c
Bytes: 50
places where a mirror::Object* is a local variable

10:30-10:40
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_76d5880c
UUID: 65a157aa_597d170a
Bytes: 4
Done

File: runtime/mirror/object_pointer.h

33:6-33:12
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_f6133813
Bytes: 98
I think this should be ObjectPtr or ObjectPointer

Also the file name doesn't match the class name

33:6-33:12
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_f6133813
UUID: 65a157aa_399f735a
Bytes: 65
Longer the name the more code bloat, I'll change it to obj_ptr.h?

34:9-34:14
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_36db0046
Bytes: 9
constexpr

34:38-34:40
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_763f4873
Bytes: 64
I think there's a constant for the size of a reference somewhere

34:9-34:14
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_36db0046
UUID: 65a157aa_b9b1a3dc
Bytes: 4
Done

34:38-34:40
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_763f4873
UUID: 65a157aa_d9be67ab
Bytes: 4
Done

45
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_f6b7b8eb
Bytes: 23
operator= mirror type ?

45
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_f6b7b8eb
UUID: 65a157aa_99dbff10
Bytes: 4
Done

53
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_d6bab4d6
Bytes: 196
That's good and it'll be much easier to use than with Decode/Get which IMHO is too wordy for a simple pointer.

Can you also add operator ==(ObjectPointer), ==(MirrorPointer), ==(nullptr) and != ?

53
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_d6bab4d6
UUID: 65a157aa_99113fba
Bytes: 4
Done

82
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_d60c74e7
Bytes: 15
Why not a mask?

82
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_d60c74e7
UUID: 65a157aa_1989cfda
Bytes: 38
Done, this was just easier to code up.

90
Mon Sep 26 22:23:19 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65a157aa_9602ecb0
Bytes: 53
Should there be a DCHECK there's no high 32 bits set?

90
Mon Sep 26 22:50:30 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65a157aa_9602ecb0
UUID: 65a157aa_5993570a
Bytes: 4
Done

