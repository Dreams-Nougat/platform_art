Revision: 942bcbaa5b0c0b2beaba962e8a47213645a81b4f
Patch-set: 13
File: /COMMIT_MSG

16:0-19:28
Tue Dec 13 21:52:55 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: da6aeb2c_c36e76ab
Bytes: 65
Did you also try ART_TEST_JIT=true and ART_TEST_INTERPRETER=true?

19
Tue Dec 13 22:07:25 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da6aeb2c_c36e76ab
UUID: da6aeb2c_a636e83f
Bytes: 41
Nope not yet. I'll do that before submit.

File: runtime/jit/jit_code_cache.cc

632:0-633:8
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_96584c74
Bytes: 55
I don't understand this TODO, why would the JIT use it?

633
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_96584c74
UUID: da6aeb2c_a9b4f919
Bytes: 130
no it is just that we need to undo the work in this function to make sure everything is kosher in the jit if we fail redefinition.

640:0-640:45
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_b655483b
Bytes: 46
I think 100% yes if all threads are suspended.

640
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_b655483b
UUID: da6aeb2c_e9aef1c9
Bytes: 29
Even if I paused jit threads?

File: runtime/openjdkjvmti/ti_redefine.cc

98:8-98:12
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_162c3cc8
Bytes: 8
jit::Jit

98
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_162c3cc8
UUID: da6aeb2c_2928094b
Bytes: 4
Done

100:79-101:33
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_f65fc056
Bytes: 29
its internal data structures.

101
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_f65fc056
UUID: da6aeb2c_09234d71
Bytes: 4
Done

147:0-148:17
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_3631381d
Bytes: 7
Remove.

148
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_3631381d
UUID: da6aeb2c_6904c1c9
Bytes: 4
Done

170:0-177:7
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_762bb0ae
Bytes: 24
Why isn't this a DCHECK?

177
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_762bb0ae
UUID: da6aeb2c_09f50daa
Bytes: 59
It doesn't really need to be. We should be able to recover.

178:0-179:61
Tue Dec 13 22:50:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aca276f_5626b4e7
Bytes: 26
Isn't that the same thing?

179
Tue Dec 13 23:24:26 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aca276f_5626b4e7
UUID: da6aeb2c_893d7d81
Bytes: 116
not really. I could see allowing redefinition of intrinsics without allowing there to be obsolete ones on the stack.

