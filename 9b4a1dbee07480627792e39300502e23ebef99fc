Revision: 9b4a1dbee07480627792e39300502e23ebef99fc
Patch-set: 1
File: oatdump/Android.bp

51
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_1b0dbb97
Bytes: 96
Repeating this seems annoying, can't we inherit it all from one place (e.g. for any art binary)?

51
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_1b0dbb97
UUID: b0938fd9_1bcf7ba9
Bytes: 54
The static binaries make this impossible. I tried. :-(

51
Fri Sep 23 14:49:29 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_1bcf7ba9
UUID: b0938fd9_1ae4cca0
Bytes: 75
Why can't we inherit this configuration I mean? This seems like a BP issue.

File: runtime/base/logging.h

88
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_7b04ff71
Bytes: 4
Why?

88
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_7b04ff71
UUID: b0938fd9_3b5d17e5
Bytes: 673
The LOG macros in libbase are structured differently. libbase made the conscious choice to have the severity check first (we had it in the destructor). Downside is that you cannot use the LOG macro anymore to unconditionally get a stream you can pass on.

This is to emulate our behavior below with ART_LOG_STREAM - which always returns a stream. However, we need to /dev/null if the severity isn't high enough.

(Regrettably you can't return a non-const reference to a temporary in C++, so this helper is the way around that. If you have a better idea [and yeah, could optimize this to not ever store anything, this is just the simplest implementation], just let me know.)

88
Fri Sep 23 14:49:29 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_3b5d17e5
UUID: b0938fd9_3af98846
Bytes: 323
I took a quick look at base/logging.h and it seems like most of our changes from this file should go there instead, I don't like the way it's done now because there's no way to discard messages without concatenating them first into an ostream.

We could provide our own custom LoggerBase (?) but then it does too much work.

100:26-100:37
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_fb664f21
Bytes: 65
what is LOGS_STREAM? it's not in android::base that I could find.

100:26-100:37
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_fb664f21
UUID: b0938fd9_9b4b8b28
Bytes: 185
There's a corresponding change. LOG_STREAM_S takes a severity as a fully qualified LogSeverity. It's required because our usage with a ternary for log level wasn't supported in libbase.

100:26-100:37
Fri Sep 23 14:49:29 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_9b4b8b28
UUID: b0938fd9_9ad7fcb3
Bytes: 47
Sounds like it should be named ART_LOG_STREAM_S

121
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_bb45a76d
Bytes: 85
This is more of a question about the old code, but why does VLOG print to LOG(INFO) ?

121
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_bb45a76d
UUID: b0938fd9_7b679fba
Bytes: 72
No clue. I assume because we didn't want to have to give two parameters?

File: runtime/base/mutex.cc

331:4-331:8
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_fbcacf10
Bytes: 34
why is it LOGS now instead of LOG?

331:4-331:8
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_fbcacf10
UUID: b0938fd9_fb73af76
Bytes: 326
Because libbase's LOG is hardcoded to prepend ::android::base to the severity - the parameter is *not* an expression. That was done for compatibility and to not pollute the global namespae.

The LOG_S variant was added to take an actual fully qualified severity, which is required for the ternary (or passing down parameters).

356:12-356:36
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_fbe3af98
Bytes: 155
This is a bit obnoxiously verbose, I think a single 'using' statement is fine so long as it's not scoped (not to be global to a header or named namespace).

356:12-356:36
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_fbe3af98
UUID: b0938fd9_7b807f2e
Bytes: 111
I can do that. I was actually considering throwing it into the art namespace in logging.h. Opinions about that?

File: runtime/check_jni.cc

278:48-278:62
Thu Sep 22 20:40:24 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0938fd9_5b8ca3e1
Bytes: 50
Is the new thing not a stream? I don't understand?

278:48-278:62
Thu Sep 22 21:03:22 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0938fd9_5b8ca3e1
UUID: b0938fd9_db27d375
Bytes: 96
See the comments in logging.h. Yes, because of design choices in libbase, (LOG) is not a stream.

