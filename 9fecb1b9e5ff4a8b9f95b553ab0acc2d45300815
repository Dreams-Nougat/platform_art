Revision: 9fecb1b9e5ff4a8b9f95b553ab0acc2d45300815
Patch-set: 1
File: compiler/optimizing/induction_var_analysis.cc

78:23-78:35
Mon Dec 19 10:28:50 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3aa30717_ee5adf0c
Bytes: 82
You;re using Cnv in SolveCnv and Conv here. How about just Conversion uniformally?

78:23-78:35
Mon Dec 19 17:49:58 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3aa30717_ee5adf0c
UUID: 7a51fff3_88007de4
Bytes: 57
Yes, good suggestion. This was getting very inconsistent.

266:0-270:3
Mon Dec 19 10:28:50 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5aba7b38_cf76fd7a
Bytes: 46
Is that not affecting what you've added below?

266:0-270:3
Mon Dec 19 17:49:58 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5aba7b38_cf76fd7a
UUID: 7a51fff3_28f071df
Bytes: 305
If the first one is not a loop phi, the whole cycle is uninteresting (note that the rotate method above guarantees that if there is a loop phi, it is first).

The code below was needed for some periodic inductions, where any of the loop phi's may be picked by the loop optimizer (depending on use pattern)

File: compiler/optimizing/induction_var_range.cc

183:0-191:1
Mon Dec 19 10:28:50 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5ad35b96_eaeda79b
Bytes: 33
Replace with HGraph::GetConstant.

183:0-191:1
Mon Dec 19 17:49:58 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5ad35b96_eaeda79b
UUID: 7a51fff3_c8836524
Bytes: 37
Ah, I missed that one somehow. Thanks

