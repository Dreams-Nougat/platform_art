Revision: a145643fd776d66bdf846a8e5cd945fe545040be
Patch-set: 4
File: compiler/optimizing/code_generator_arm.cc

656:57-657:30
Wed Oct 19 09:31:28 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0657a0_08cfa73d
Bytes: 37
Add a comment on what this update is.

656:57-657:30
Thu Oct 20 14:34:54 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7c0657a0_08cfa73d
UUID: dcdd835f_8e015bb5
Bytes: 32
Sure, will do in next patch set.

656:57-657:30
Thu Oct 20 15:35:11 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcdd835f_8e015bb5
UUID: 7c0657a0_2bdca5c9
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.h

522:9-522:28
Wed Oct 19 09:31:28 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0657a0_28d26be7
Bytes: 63
I don't understand this name. Why isn't it atomic_update_field?

522:9-522:28
Thu Oct 20 14:34:54 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7c0657a0_28d26be7
UUID: 5cba7338_6fe6f16d
Bytes: 455
I chose this name based on the `kAlwaysUpdateField` template parameter of the `art::ReadBarrier::Barrier` method.  The documentation of this method says:

  // It's up to the implementation whether the given field gets updated whereas the return value
  // must be an updated reference unless kAlwaysUpdateField is true.

I'm considering renaming this as `update_field` here (for the Baker read barrier case only); what do you (Nicolas and Hiroshi) think?

522:9-522:28
Thu Oct 20 18:43:45 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5cba7338_6fe6f16d
UUID: 3c777f48_d87ce263
Bytes: 20
I'm fine either way.

File: runtime/interpreter/unstarted_runtime.cc

1237:0-1248:3
Tue Oct 18 20:21:10 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcf58392_7ed0d008
Bytes: 70
Do we need this code because this is for a long rather than an object?

1237:0-1248:3
Thu Oct 20 14:34:54 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcf58392_7ed0d008
UUID: fca887f5_0c5e572c
Bytes: 82
Good question.  I'm not sure this is actually needed.  Andreas, what do you think?

1237:0-1248:3
Thu Oct 20 18:43:45 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fca887f5_0c5e572c
UUID: 3c777f48_5820f25e
Bytes: 59
I'm guessing it's a simple copy-and-paste error. Remove it?

