Revision: a30c883f399c5db72dac5148904fbaa2b734604b
Patch-set: 5
File: /COMMIT_MSG

13:49-13:54
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 25283f69_e64a1eac
Bytes: 5
worse

13:49-13:54
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 25283f69_e64a1eac
UUID: 02fa5131_1d275372
Bytes: 4
Done

File: compiler/driver/compiler_driver.cc

480
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c2ff5921_7b5e5f4e
Bytes: 38
Also check for static/direct mismatch.

480
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c2ff5921_7b5e5f4e
UUID: 25283f69_06cf3a24
Bytes: 4
Done

File: compiler/intrinsics_enum.h

23:36-23:95
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c2ff5921_9b9b6b15
Bytes: 11
Unnecessary

23:36-23:95
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c2ff5921_9b9b6b15
UUID: e2029df6_1c9755f8
Bytes: 4
Done

33:0-33:1
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 82172137_b93abf1c
Bytes: 16
// namespace art

File: compiler/optimizing/intrinsics.h

37:38-37:55
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 82172137_9937fb36
Bytes: 20
Remove; fix callers.

37:38-37:55
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 82172137_9937fb36
UUID: e2029df6_dc78cdc8
Bytes: 4
Done

File: runtime/art_method.h

314:45-314:53
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_7ce3f997
Bytes: 30
Add a named constant for this.

314:45-314:53
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_7ce3f997
UUID: e2029df6_3cab3126
Bytes: 4
Done

350:0-352:5
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_5ce83d70
Bytes: 60
static_assert((kAccCopied & 0x7fffff) == kAccCopied, "...");

350:0-352:5
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_5ce83d70
UUID: e2029df6_1cb07590
Bytes: 4
Done

361:0-363:5
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_3cdd71d6
Bytes: 13
static_assert

361:0-363:5
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_3cdd71d6
UUID: e2029df6_fca4a954
Bytes: 4
Done

370:0-372:5
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_fcf6e954
Bytes: 47
Unnecessary, handled in IsDefaultConflicting().

370:0-372:5
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_fcf6e954
UUID: 420d292b_973584e0
Bytes: 4
Done

395:0-397:5
Wed Sep 28 12:48:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e2029df6_1ce2b590
Bytes: 13
static_assert

395:0-397:5
Wed Sep 28 13:33:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e2029df6_1ce2b590
UUID: e2029df6_dca1ed42
Bytes: 4
Done

