Revision: ae269e75fe08bce30248f5c78e77653115a493b8
Patch-set: 1
File: compiler/optimizing/code_generator_arm_vixl.cc

4925
Thu Nov 24 14:20:40 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 905054f1_91799c73
Bytes: 20
temps.Release(temp);

4925
Thu Nov 24 14:35:14 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 905054f1_91799c73
UUID: 905054f1_d12a4441
Bytes: 340
Do we expect to add stuff at the end of this function (or its equivalent in the other ARM code generator)? It's true that some of the explicit Release() calls I have added are, strictly speaking, unnecessary, but there are code generator calls after them, so I have done it defensively (to make the code more robust against future changes).

File: test/538-checker-embed-constants/src/Main.java

510:50-510:68
Thu Nov 24 14:20:40 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 905054f1_51881441
Bytes: 97
Does the vixl disassembler always print both Rd and Rn, even for the SUB (immediate) encoding T2?

510:50-510:68
Thu Nov 24 14:35:14 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 905054f1_51881441
UUID: 905054f1_9120bc63
Bytes: 179
No, but I have to recheck if this rule works for the current backend (it works for the VIXL backend, since that's what I have been mainly interested in) - thanks for the reminder!

510:50-510:68
Thu Nov 24 16:03:04 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 905054f1_9120bc63
UUID: 905054f1_71c0b837
Bytes: 162
The current backend generates:

 1e50    	subs r0, r2, #1

So, I am actually surprised that the old rule works at all - does whitespace implicitly match anything?

510:50-510:68
Thu Nov 24 16:17:53 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 905054f1_71c0b837
UUID: 905054f1_347c5e23
Bytes: 311
Anton: Yes, this is feature of Checker, which tokenizes based on whitespace and then tries to match elements independently (though respecting their order).  To make sure that whitespace is not ignored, you can put all elements in the same regex:

  /// CHECK-NEXT:  {{(adds|subs)\s+r\d+, r\d+, #(4294967295|1)}}

