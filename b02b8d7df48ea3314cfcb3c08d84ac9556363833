Revision: b02b8d7df48ea3314cfcb3c08d84ac9556363833
Base-for-patch-set: 1
File: compiler/optimizing/dead_code_elimination.h

32:0-34:70
Tue Nov 08 22:13:05 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b64332d_37ab1276
Bytes: 16
Why this change?

32:0-34:70
Tue Nov 08 22:14:54 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b64332d_37ab1276
UUID: 6b23efec_8a02ab26
Bytes: 95
explicit... This was an implicit conversion constructor (can be called with a single argument).

32:0-34:70
Tue Nov 08 22:17:22 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6b23efec_8a02ab26
UUID: 2bf0179f_d3890cb2
Bytes: 26
But why is that a problem?

32:0-34:70
Tue Nov 08 22:26:04 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bf0179f_d3890cb2
UUID: 0b64332d_17b096dc
Bytes: 358
Implicit conversion constructors are generally discouraged because they may lead to some unexpected conversions (and strange compilation errors); they also increase compilation time due to extra conversion sequences that must be considered during overload resolution. They are therefore flagged by clang-tidy. See the bug and follow the link to the warnings.

32:0-34:70
Tue Nov 08 22:29:46 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b64332d_17b096dc
UUID: 6b55af38_dd047bf4
Bytes: 11
ok, thanks!

