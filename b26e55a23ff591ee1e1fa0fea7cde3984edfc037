Revision: b26e55a23ff591ee1e1fa0fea7cde3984edfc037
Patch-set: 6
File: runtime/art_method.h

486:0-486:62
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 617f90e7_4778ce35
Bytes: 24
Move this before the if?

486:0-486:62
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 617f90e7_4778ce35
UUID: a1c7c880_19892b07
Bytes: 4
Done

File: runtime/cha.cc

238:0-238:25
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1898840_c9713100
Bytes: 44
Should you check if the method is final too?

238:0-238:25
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1898840_c9713100
UUID: e1c8e09a_1388eca9
Bytes: 17
Good point. Done.

File: runtime/cha.h

33:43-33:56
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0195f44b_8cb90782
Bytes: 12
devirutalize

33:43-33:56
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0195f44b_8cb90782
UUID: 819f2479_40d32eec
Bytes: 4
Done

39:0-42:14
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1bb48d0_d9711300
Bytes: 68
I'd put this at the end. We eventually want to do this for AOT code.

39:0-42:14
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1bb48d0_d9711300
UUID: a19ee87a_41c452f8
Bytes: 149
Moved to the end. Actually even for AOT, it's going to be based on profiling info (except boot image) instead of analyzing all available class files.

49:60-49:61
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e191c062_abdf89be
Bytes: 3
the

49:28-49:29
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c1cd9c7a_e28aa6a3
Bytes: 3
the

49:28-49:29
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c1cd9c7a_e28aa6a3
UUID: e1c8e09a_937cfc29
Bytes: 4
Done

49:60-49:61
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e191c062_abdf89be
UUID: e1c8e09a_33a52889
Bytes: 4
Done

51:45-51:46
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0195f44b_acb6c38e
Bytes: 3
The

51:45-51:46
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0195f44b_acb6c38e
UUID: e1c8e09a_13a22c81
Bytes: 4
Done

52:37-52:49
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e191c062_cbdcd5cc
Bytes: 7
depends

52:37-52:49
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e191c062_cbdcd5cc
UUID: e1c8e09a_d3c0341c
Bytes: 4
Done

55:3-57:33
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 817ac4f4_28300b1f
Bytes: 117
After a new class gets linked, if that new class is now invalidating the status of single implementation methods, ...

55:3-57:33
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 817ac4f4_28300b1f
UUID: e1c8e09a_13534c84
Bytes: 231
Officially it's not linked yet since it's status is not resolved yet. I changed it to:
 * When single-implementation info is updated at the end of class linking,
 * and if method A's single-implementation status is invalidated, ...

58:54-58:59
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 817ac4f4_48253fdc
Bytes: 4
need

58:54-58:59
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 817ac4f4_48253fdc
UUID: e1c8e09a_d345d4b2
Bytes: 4
Done

58:63-59:16
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 211918c1_65f32634
Bytes: 18
to be invalidated.

58:63-59:16
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 211918c1_65f32634
UUID: e1c8e09a_b3aff833
Bytes: 4
Done

71:1-72:41
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1bb48d0_199d4bf4
Bytes: 95
Maybe add this comment once you implement it? That way you aviod the "some" and can be clearer.

71:1-72:41
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1bb48d0_199d4bf4
UUID: e1c8e09a_13b7ccbb
Bytes: 4
Done

74:27-74:34
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 817ac4f4_682a03ad
Bytes: 5
taken

74:27-74:34
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 817ac4f4_682a03ad
UUID: e1c8e09a_73ba8076
Bytes: 4
Done

79:26-79:34
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1898840_89673943
Bytes: 10
guaranteee

79:26-79:34
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1898840_89673943
UUID: e1c8e09a_33c408f8
Bytes: 4
Done

83:38-83:46
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e191c062_0b741df4
Bytes: 263
... we need to know both the ArtMethod and the method header. If the ArtMethod has the method header as the entyrpoint, we update the entry point to the interpreter bridge. We will also deoptimize frames that are currently executing the code of the method header.

83:38-83:46
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e191c062_0b741df4
UUID: e1c8e09a_33dd28c6
Bytes: 4
Done

87:55-87:82
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1bb48d0_99907bda
Bytes: 25
MehodAndMethodHeaderPair?

87:55-87:82
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1bb48d0_99907bda
UUID: e1c8e09a_13da2cce
Bytes: 4
Done

106:0-106:41
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c184bc26_cadcc3cc
Bytes: 14
Add a comment.

106:0-106:41
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c184bc26_cadcc3cc
UUID: e1c8e09a_538e64ba
Bytes: 4
Done

File: runtime/jit/jit_code_cache.cc

254:0-255:78
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e191c062_0b9dfdf3
Bytes: 136
This is annoying. How about just locking the cha lock eagerly and collecting the dead pointers when iterating over th emethod_code_map_?

254:0-255:78
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e191c062_0b9dfdf3
UUID: e1c8e09a_533c24f6
Bytes: 414
cha_lock_ is needed during class linking so I don't want code cache gc to block class linking for long.

Actually we don't need JitCodeCache::lock_ for real code freeing part (which may have contention on malloc lock). All we need is updating used_memory_for_code_ under JitCodeCache::lock_ in the end. I just made the change and consider this as an improvement since we moved some code out of JitCodeCache::lock_.

275:0-277:72
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1898840_09426983
Bytes: 134
I wouldn't bother using arenas here. The jit code cache internal data structures are already eg, std::vector not maintained by arenas.

275:0-277:72
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a1898840_09426983
UUID: e1c8e09a_1338ec8f
Bytes: 4
Done

File: runtime/oat_quick_method_header.h

79:0-155:67
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 617f90e7_47ed2e9b
Bytes: 179
I am tempted to add a new section in the code info that will contain "interesting" individual bits. The trick of using the code size beign aligned I don't think will work for AOT.

79:0-155:67
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 617f90e7_47ed2e9b
UUID: e1c8e09a_56041279
Bytes: 118
A little confused. I'm using the highest bit so it's not related to alignment?
Also we don't do CHA for AOT code  yet.

File: test/common/runtime_state.cc

164:2-164:3
Tue Oct 25 14:46:18 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c1cd9c7a_22100e74
Bytes: 27
Do you need the scope here?

164:2-164:3
Tue Oct 25 23:32:16 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c1cd9c7a_22100e74
UUID: e1c8e09a_f6579e73
Bytes: 10
No. Fixed.

