Revision: b7e95b282dec1ecdadc192d048dfc473eb13c3d3
Patch-set: 5
File: compiler/optimizing/reference_type_propagation.cc

809:4-809:9
Wed Dec 21 14:45:24 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 17237e9f_7b18978d
Bytes: 50
dcheck(upper_bound_rti.IsSupertypeOf(input_rti)) ?

809:4-809:9
Wed Dec 21 14:50:30 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 17237e9f_7b18978d
UUID: 17237e9f_3b221fbc
Bytes: 115
No, they may be unrelated (therefore the code dominated by the bound type is dead), and that would fail the DCHECK.

809:4-809:9
Wed Dec 21 14:53:51 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 17237e9f_3b221fbc
UUID: 17237e9f_bb350fef
Bytes: 109
We can write a checker test for it.

i.e. to sow that if an instruction gets typed wrongly that code is dead.

814:39-814:48
Wed Dec 21 14:45:24 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 17237e9f_9be9333b
Bytes: 85
this unrelated scares me a bit since it means, that's dead code and shouldn't matter.

814:39-814:48
Wed Dec 21 14:50:30 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 17237e9f_9be9333b
UUID: 17237e9f_fb2b8792
Bytes: 311
It's related to the comment on TOT:

Note that the input might be exact, in which case we know the branch leading to the bound type is dead. We play it safe by not marking the bound type as exact.

I hate this vague "we play it safe". That's probably related to interfaces / abstract classes. I'll write a test.

814:39-814:48
Wed Dec 21 14:53:51 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 17237e9f_fb2b8792
UUID: 17237e9f_9b325303
Bytes: 4
sgtm

