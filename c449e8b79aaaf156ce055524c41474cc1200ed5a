Revision: c449e8b79aaaf156ce055524c41474cc1200ed5a
Patch-set: 2
File: runtime/interpreter/interpreter_common.cc

458:0-459:93
Wed Oct 19 17:37:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcf58392_bc1a36e0
Bytes: 175
What code does this optimization refer to? We don't do the double-store (storing null to the reference array when storing a non-reference to a vreg) for non-moving collectors?

458:0-459:93
Wed Oct 19 17:53:02 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcf58392_bc1a36e0
UUID: dcf58392_bc84f6a3
Bytes: 581
Look at SetVReg[Primitive] in stack.h. The comments are from there and I also put it on the AssignRegister side.

If it's a non-moving collector then it skips clearing the reference array element for that vreg.

Basically in rare cases the primitive value == the reference value, and in that case it's indistinguishable from a real reference. For non-moving collectors that seems not to matter (it just adds an extra root) much because it won't have to rewrite the value.

For moving collectors it's a problem since if we moved it then the primitive value would incorrectly change.

458:0-459:93
Wed Oct 19 19:37:07 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcf58392_bc84f6a3
UUID: dcf58392_d51b9595
Bytes: 22
Thanks for clarifying.

458:0-459:93
Wed Oct 19 21:19:16 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcf58392_d51b9595
UUID: 7c0657a0_e8efb305
Bytes: 84
Can we drop all the code that works for !kMovingCollector? ART has grown up since :)

File: runtime/stack.h

291:46-291:51
Thu Oct 20 07:46:19 2016 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0657a0_483d9f82
Bytes: 2
an

