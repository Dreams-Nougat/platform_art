Revision: c4d5854c29f36dc2c4f0cd691df98a8eeeff0654
Patch-set: 3
File: compiler/optimizing/induction_var_range.cc

811:7-811:61
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_26f53847
Bytes: 94
Personal preference, but maybe this reads better on a while loop? Not feeling strongly though.

820:6-820:81
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_06f2bc5e
Bytes: 17
nit: one per line

823:0-823:27
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_66ef3077
Bytes: 40
I'd add a comment why graph can be null.

827:99-827:103
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_46ecb480
Bytes: 14
Line too long.

834:97-834:102
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_a68928de
Bytes: 14
Line too long.

838:94-838:102
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bc5a8f66_5a951518
Bytes: 14
Line too long.

File: compiler/optimizing/loop_optimization.cc

226:0-226:33
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_868eace1
Bytes: 29
Is that an unrelated bug fix?

File: test/618-checker-induction/src/Main.java

49:14-49:30
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_e6932008
Bytes: 22
potentialInfiniteLoop?

329:0-329:47
Mon Oct 17 09:08:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bcbe0e35_067bdcc2
Bytes: 218
Actually, thinking about your comment on a different CL that we already check at runtime the return value, I still think it would be worthwhile to check it in checker. Who knows if there is still some computation left?

