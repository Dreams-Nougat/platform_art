Revision: e13d81ef02c3c1bede86fe4947c31c50f53d6782
Patch-set: 1
File: compiler/optimizing/induction_var_analysis.h

246:52-246:62
Sat Oct 22 11:52:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcf663e5_86670c63
Bytes: 9
loop phi?

File: compiler/optimizing/loop_optimization.cc

266:13-266:27
Sat Oct 22 11:52:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcdd835f_34d2b6e7
Bytes: 125
Why do you need this check? Protecting from dead code being removed between the induction analysis and the loop optimization?

283:0-319:1
Sat Oct 22 11:52:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0657a0_4eb8077c
Bytes: 35
These methods did not change right?

File: test/530-checker-loops2/src/Main.java

902:1-902:27
Sat Oct 22 11:52:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ced7706_d35b860f
Bytes: 5
woot!

