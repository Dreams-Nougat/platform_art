Revision: e5aa148abdb0fb6932da5fa4723a2a75592336f6
Patch-set: 1
File: runtime/arch/x86_64/quick_entrypoints_x86_64.S

1487:66-1487:94
Tue Nov 01 21:43:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 26d84e6c_8cb4ba1e
Bytes: 15
Please explain.

1487:66-1487:94
Tue Nov 01 22:24:36 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26d84e6c_8cb4ba1e
UUID: 26d84e6c_afe408c9
Bytes: 4
Done

1497:4-1497:24
Tue Nov 01 21:43:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 26d84e6c_acf096e3
Bytes: 244
Why are you doing this in the loop? Either extend the comment (stating something like poisoning is non-default and thus we don't care about performance) or move it out of the loop (which introduces an empty jump target on non-poisoning builds).

1497:4-1497:24
Tue Nov 01 22:24:36 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26d84e6c_acf096e3
UUID: 26d84e6c_cfdf54f0
Bytes: 4
Done

1507:0-1517:30
Tue Nov 01 21:43:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 26d84e6c_eca45ef4
Bytes: 104
Why not go all the way and traverse superclasses here? It's not more complicated than your loop above...

1507:0-1517:30
Tue Nov 01 22:24:36 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26d84e6c_eca45ef4
UUID: 26d84e6c_0ff0bc74
Bytes: 87
That case was not showing up in perf, I think it is already handled in VisitInstanceOf.

1507:0-1517:30
Tue Nov 01 22:48:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26d84e6c_0ff0bc74
UUID: 26d84e6c_6a304e48
Bytes: 43
Could you add a comment about that, please?

1507:0-1517:30
Tue Nov 01 22:50:03 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26d84e6c_6a304e48
UUID: 26d84e6c_2acc861f
Bytes: 4
Done

