Revision: f3caf239991db4d192010ebfdd6910300ae26986
Patch-set: 3
File: /COMMIT_MSG

12:0-12:22
Thu Dec 01 02:51:17 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d556338_cbff95b7
Bytes: 90
You're changing the interpreter. At least another stanza with ART_TEST_INTERPRETER=true...

12:0-12:22
Thu Dec 01 19:50:12 2016 +0000
Author: Jeff Hao <1010108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d556338_cbff95b7
UUID: 4d556338_f6dfd94f
Bytes: 122
Ok, I'll add that this was tested with ART_TEST_INTERPRETER=true, as well as the tracking bug for interpreter performance.

File: runtime/interpreter/interpreter_common.cc

1377:0-1388:3
Thu Dec 01 12:36:22 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: adbc1f98_0ac85bb2
Bytes: 38
Why is that not just number_of_inputs?

1377:0-1388:3
Thu Dec 01 16:48:08 2016 +0000
Author: Jeff Hao <1010108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: adbc1f98_0ac85bb2
UUID: 4d556338_ec342ff4
Bytes: 370
We use num_regs to construct the shadow frame for the method being called. For the interpreter, it uses the called method code item's registers size to size it properly. For the compiler, this space is actually unused, since we only need to set up the inputs. Basically, it should be registers_size in the interpreter with code item case, and number of inputs otherwise.

1377:0-1388:3
Thu Dec 01 22:21:16 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d556338_ec342ff4
UUID: 8dd83b0a_94a0ea75
Bytes: 89
Sorry I don't understand this, the code before does not check compiled or not, and works.

1377:0-1388:3
Thu Dec 01 22:35:15 2016 +0000
Author: Jeff Hao <1010108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8dd83b0a_94a0ea75
UUID: 4d556338_4ae6d6cf
Bytes: 408
I moved the check up to avoid accessing the code item's fields in the case where it is compiled. It worked the old way too, but this way I improve dex file memory accesses. 

This fix comes out of dexlayout measurements I was making. I saw it access parts of the dex file that should only contain compiled code, and this is the cause. It loads in 128kB just to read a code item's registers_size and ins_size.

